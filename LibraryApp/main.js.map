{"version":3,"sources":["./src/app/author/author.component.ts","./src/app/author/author.component.html","./src/app/add-book/add-book.component.ts","./src/app/add-book/add-book.component.html","./src/app/author.service.ts","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/app/token-interceptor.service.ts","./src/app/edit-author/edit-author.component.ts","./src/app/edit-author/edit-author.component.html","./src/environments/environment.ts","./src/app/edit-book/edit-book.component.ts","./src/app/edit-book/edit-book.component.html","./src/app/authors/authors.component.ts","./src/app/authors/authors.component.html","./src/app/book.service.ts","./src/app/books/books.component.ts","./src/app/books/books.component.html","./src/app/books/book.model.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/book/book.component.ts","./src/app/book/book.component.html","./src/app/app.module.ts","./src/app/authors/author.model.ts","./src/app/auth.service.ts","./src/app/header/header.component.ts","./src/app/header/header.component.html","./src/app/footer/footer.component.ts","./src/app/footer/footer.component.html","./src/app/add-author/add-author.component.ts","./src/app/add-author/add-author.component.html","./src/app/signup/user.model.ts","./src/app/signup/signup.component.ts","./src/app/signup/signup.component.html","./src/app/auth.guard.ts","./src/app/app-routing.module.ts","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/user.service.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthorModel } from '../authors/author.model';\nimport { AuthorService } from '../author.service';\n\n@Component({\n  selector: 'app-author',\n  templateUrl: './author.component.html',\n  styleUrls: ['./author.component.css']\n})\nexport class AuthorComponent implements OnInit {\n  title:String = \"Author\";\n  author = new AuthorModel( null, null, null, null,null);\n  constructor(private authorService: AuthorService, private router:Router) { }\n\n  ngOnInit(): void {\n    let rauthorId = localStorage.getItem(\"readAuthorId\");\n    this.authorService.getAuthor(rauthorId).subscribe((data)=>{\n      this.author=JSON.parse(JSON.stringify(data));\n  })\n  }\n}\n","<div class=\"container\">\n    <div>\n        <h2 style=\"margin-top: 1%; text-align: center;\">{{title}}\n            <p class=\"lead\"></p>\n        </h2>\n    </div>\n    <hr style=\"width: 50%; margin-left: 25%;\"><br>\n    <div class=\"row\">\n        <div class=\"col-md-12\">\n            <div class=\"panel\">\n                <div class=\"panel-body\">\n\n                    <!--/stories-->\n                    <div class=\"row\" style=\"margin-left: 35%;\">\n                        <br>\n                        <div class=\"col-md-2 col-sm-3 text-center\">\n                            <a class=\"story-title\"><img [src]='author.img' [title]='author.aname' style=\"width:100px;height:100px\" class=\"img-circle\"></a>\n                        </div>\n                        <div class=\"col-md-10 col-sm-9\">\n                            <h3>{{author.aname}}</h3>\n                            <div class=\"row\">\n                                <div class=\"col-xs-9\">\n                                    <h4><span class=\"label label-default\">{{author.nationality}}</span></h4>\n                                    <h4>\n                                        <small style=\"font-family: courier,'new courier'; color: black; font-weight: bold;\" class=\"text-muted\">{{author.fambook}}</small>\n                                    </h4>\n                                </div>\n                                <div class=\"col-xs-3\"></div>\n                            </div>\n                            <br><br>\n                        </div>\n                    </div>\n                    <hr>\n                    <!--/stories-->\n                   <p> {{author.des}}</p>\n\n                </div>\n            </div>\n        </div>\n        <!--/col-12-->\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { BookModel } from '../books/book.model';\nimport { BookService } from '../book.service';\nimport { AuthService} from '../auth.service';\n\n@Component({\n  selector: 'app-add-book',\n  templateUrl: './add-book.component.html',\n  styleUrls: ['./add-book.component.css']\n})\nexport class AddBookComponent implements OnInit {\n  title:String = \"Add Book\";\n\n  constructor(private bookService: BookService, private router:Router, private _auth: AuthService) { }\n  bookItem = new BookModel( null, null, null, null,null);\n  ngOnInit(): void {\n  }\n\n  AddBook(){\n    this.bookService.newBook(this.bookItem);\n    alert(\"Success\");\n    this.router.navigate(['books']);\n  }\n}\n","<div class=\"container\">\n    <div>\n      <h3 style=\"color: #1687a7; margin-top: 1%; margin-bottom: 2%; text-align: center;\">{{title}}\n        <p class=\"lead\"></p>\n      </h3>\n    </div>\n    <hr>\n    <form (ngSubmit)=\"AddBook()\">\n      <div class=\"container\">\n        <div class=\"row\">\n          <div class=\"col-lg-6\" style=\"margin-left: 25%;\">\n            <div class=\"panel\">\n              <div class=\"panel-body\" style=\"background-color: #d3e0ea; border-radius: 20px;\">\n                <div class='table-responsive'>\n                  <table class='table' style=\"margin-top: 15px;\">       \n                    <tbody> \n                      <tr>\n                        <td><label>Title</label></td>\n                        <td><input type=\"text\" style=\"width: 250px;\" name=\"btitle\" [(ngModel)]=\"bookItem.btitle\" required/></td>                  \n                      </tr>\n                      <tr>\n                        <td><label>Author</label></td>\n                        <td><input type=\"text\" style=\"width: 250px;\" name=\"author\" [(ngModel)]=\"bookItem.author\" required/></td>               \n                      </tr> \n                      <tr>\n                        <td><label>Genre</label></td>\n                        <td><input type=\"text\" style=\"width: 250px;\" name=\"genre\" [(ngModel)]=\"bookItem.genre\" required/></td>                  \n                      </tr> \n                      <tr>\n                        <td><label>Image Url</label></td>\n                        <td><input type=\"text\" style=\"width: 250px;\" name=\"img\" [(ngModel)]=\"bookItem.img\" required/></td>                  \n                      </tr>\n                      <tr>\n                        <td><label>Description</label></td>\n                        <td><input type=\"text\" style=\"width: 250px;\" name=\"des\" [(ngModel)]=\"bookItem.des\" required/></td>                  \n                      </tr>   \n                      <tr>\n                        <td></td>\n                        <td><button type=\"submit\" class=\"btn btn-info\">Submit</button></td>                  \n                      </tr>             \n                    </tbody>\n                  </table>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </form>\n  </div>","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthorService {\n server_address:String ='/api';\n  constructor(private http:HttpClient) { }\n  getAuthor(id:any){\n    return this.http.get(`${this.server_address}/author/`+id);\n  }\n  getAuthors(){\n    return this.http.get(`${this.server_address}/authors`);\n  }\n  newAuthor(item){\n    return this.http.post(`${this.server_address}/addauthor`,{\"author\":item})\n      .subscribe(data => {console.log(data)})\n  }\n  deleteAuthor(id:any){\n    return this.http.delete(`${this.server_address}/deleteauthor/`+id);\n  }\n  editAuthor(author:any)\n  {\n    return this.http.put(`${this.server_address}/editauthor`, author)\n    .subscribe(data =>{console.log(data)})\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n  title:String=\"Home\";\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"container\">\n    <div class=\"row\" >\n        <div class=\"col-md-12\">\n            <div class=\"panel\">\n                <div class=\"panel-body\" style=\"text-align: left;\">\n                    <!--/stories-->\n                    <blockquote class=\"blockquote blockquote-custom  p-5 shadow rounded\"><br><br>\n                        <div class=\"blockquote-custom-icon bg-info shadow-sm\"><i class=\"fa fa-quote-left text-black\"></i></div>\n                        <p class=\"mb-0 mt-2 font-italic\" style=\"font-size: 30px; padding-top: 50px; color: white; font-weight: 500;\">\"The only thing that you<br> absolutly  have to know <br> is the location of the <b>Library</b>\" </p>\n                        <!-- <footer class=\"blockquote-footer \" style=\"font-size: 16px; border: 10px;\">Descartes\n                           \n                        </footer> -->\n                        <br>\n                        <p style=\"font-family: 'Times New Roman', Times, serif; font-size: 16px;\"><b>--Albert Einstein</b></p>\n                        \n                    </blockquote>\n                   \n                    <!--/stories-->\n                </div>\n            </div>\n        </div><!--/col-12-->\n    </div>\n</div>","import { Injectable, Injector } from '@angular/core';\nimport { HttpInterceptor } from '@angular/common/http';\nimport { AuthService } from './auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TokenInterceptorService implements HttpInterceptor{\n\n  constructor(private injector: Injector) { }\n\n  intercept(req:any, nxt:any){\n    let authService = this.injector.get(AuthService);\n    let tokenizedReq = req.clone({\n        setHeaders:{\n          Authorization: `Bearer ${authService.getToken()}`\n        }\n      }\n    )\n    return nxt.handle(tokenizedReq);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthorModel } from '../authors/author.model';\nimport { AuthorService } from '../author.service';\n\n@Component({\n  selector: 'app-edit-author',\n  templateUrl: './edit-author.component.html',\n  styleUrls: ['./edit-author.component.css']\n})\nexport class EditAuthorComponent implements OnInit {\n  title:String = \"Edit Author\";\n  constructor(private authorService: AuthorService, private router:Router) { }\n  authorItem = new AuthorModel( null, null, null, null,null);\n\n  ngOnInit(): void {\n    let authorId = localStorage.getItem(\"editAuthorId\");\n    this.authorService.getAuthor(authorId).subscribe((data)=>{\n      this.authorItem=JSON.parse(JSON.stringify(data));\n  })\n  }\n\n  EditAuthor(){    \n    this.authorService.editAuthor(this.authorItem);   \n    alert(\"Success\");\n    this.router.navigate(['authors']);\n  }\n}\n","<div class=\"container\">\n    <div>\n      <h3 style=\"color: #1687a7; margin-top: 1%; margin-bottom: 2%; text-align: center;\">Edit Houseboat\n        <p class=\"lead\"></p>\n      </h3>\n    </div>\n    <form (ngSubmit)=\"EditAuthor()\">\n      <div class=\"container\">\n        <div class=\"row\">\n          <div class=\"col-lg-6\" style=\"margin-left: 25%;\">\n            <div class=\"panel\">\n              <div class=\"panel-body\" style=\"background-color: #d3e0ea; border-radius: 20px;\">\n                <div class='table-responsive'>\n                  <table class='table' style=\"margin-top: 15px;\">       \n                    <tbody>  \n                      <tr>\n                        <td><label>Author Name</label></td>\n                        <td><input type=\"text\" style=\"width: 250px;\" name=\"aname\" [(ngModel)]=\"authorItem.aname\"/></td>              \n                      </tr>\n                      <tr>\n                        <td><label>Nationality</label></td>\n                        <td><input type=\"text\" style=\"width: 250px;\" name=\"nationality\" [(ngModel)]=\"authorItem.nationality\"/></td>\n                      </tr> \n                      <tr>\n                        <td><label>Fambook</label></td>\n                        <td><input type=\"text\" style=\"width: 250px;\" name=\"fambook\" [(ngModel)]=\"authorItem.fambook\"/></td>                  \n                      </tr> \n                      <tr>\n                        <td><label>Image Url</label></td>\n                        <td><input type=\"text\" style=\"width: 250px;\" name=\"img\" [(ngModel)]=\"authorItem.img\"/></td>                  \n                      </tr> \n                      <tr>\n                        <td><label>Description</label></td>\n                        <td><input type=\"text\" style=\"width: 250px;\" name=\"des\" [(ngModel)]=\"authorItem.des\" required/></td>                  \n                      </tr>  \n                      <tr>\n                        <td></td>\n                        <td><button type=\"submit\" class=\"btn btn-info\">Submit</button></td>                  \n                      </tr>             \n                    </tbody>\n                  </table>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </form>\n  </div>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { BookModel } from '../books/book.model';\nimport { BookService } from '../book.service';\n\n@Component({\n  selector: 'app-edit-book',\n  templateUrl: './edit-book.component.html',\n  styleUrls: ['./edit-book.component.css']\n})\nexport class EditBookComponent implements OnInit {\n  title:String = \"Edit Book\";\n  constructor(private bookService: BookService, private router:Router) { }\n  bookItem = new BookModel( null, null, null, null,null);\n\n  ngOnInit(): void {\n    let bookId = localStorage.getItem(\"editBookId\");\n    this.bookService.getBook(bookId).subscribe((data)=>{\n      this.bookItem=JSON.parse(JSON.stringify(data));\n  })\n  }\n\n  EditBook(){    \n    this.bookService.editBook(this.bookItem);   \n    alert(\"Success\");\n    this.router.navigate(['books']);\n  }\n}\n","<div class=\"container\">\n    <div>\n      <h3 style=\"color: #1687a7; margin-top: 1%; margin-bottom: 2%; text-align: center;\">Edit Book\n        <p class=\"lead\"></p>\n      </h3>\n    </div>\n    <form (ngSubmit)=\"EditBook()\">\n      <div class=\"container\">\n        <div class=\"row\">\n          <div class=\"col-lg-6\" style=\"margin-left: 25%;\">\n            <div class=\"panel\">\n              <div class=\"panel-body\" style=\"background-color: #d3e0ea; border-radius: 20px;\">\n                <div class='table-responsive'>\n                  <table class='table' style=\"margin-top: 15px;\">       \n                    <tbody>  \n                      <tr>\n                        <td><label>Title</label></td>\n                        <td><input type=\"text\" style=\"width: 250px;\" name=\"btitle\" [(ngModel)]=\"bookItem.btitle\"/></td>              \n                      </tr>\n                      <tr>\n                        <td><label>Author</label></td>\n                        <td><input type=\"text\" style=\"width: 250px;\" name=\"author\" [(ngModel)]=\"bookItem.author\"/></td>\n                      </tr> \n                      <tr>\n                        <td><label>Genre</label></td>\n                        <td><input type=\"text\" style=\"width: 250px;\" name=\"genre\" [(ngModel)]=\"bookItem.genre\"/></td>                  \n                      </tr> \n                      <tr>\n                        <td><label>Image Url</label></td>\n                        <td><input type=\"text\" style=\"width: 250px;\" name=\"img\" [(ngModel)]=\"bookItem.img\"/></td>                  \n                      </tr> \n                      <tr>\n                        <td><label>Description</label></td>\n                        <td><input type=\"text\" style=\"width: 250px;\" name=\"des\" [(ngModel)]=\"bookItem.des\" required/></td>                  \n                      </tr>  \n                      <tr>\n                        <td></td>\n                        <td><button type=\"submit\" class=\"btn btn-info\">Submit</button></td>                  \n                      </tr>             \n                    </tbody>\n                  </table>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </form>\n  </div>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthorModel } from './author.model';\nimport { AuthorService } from '../author.service';\nimport { AuthService} from '../auth.service';\n\n@Component({\n  selector: 'app-authors',\n  templateUrl: './authors.component.html',\n  styleUrls: ['./authors.component.css']\n})\nexport class AuthorsComponent implements OnInit {\n  title:String = \"Authors\";\n  authors: AuthorModel[];\n  constructor(private authorService: AuthorService, private router:Router, private _auth: AuthService) { }\n\n  ngOnInit(): void {\n    this.authorService.getAuthors().subscribe((data)=>{\n      this.authors=JSON.parse(JSON.stringify(data));\n    })\n  }\n\n  DeleteAuthor(id: String){\n    this.authorService.deleteAuthor(id).subscribe(res =>{\n      this.authorService.getAuthors().subscribe((data)=>{\n        this.authors=JSON.parse(JSON.stringify(data));\n      })\n    })\n  }\n\n  EditAuthor(author:any){\n    localStorage.setItem(\"editAuthorId\", author._id.toString());\n    this.router.navigate(['editauthor']);\n  }\n\n  ReadAuthor(author:any){\n    localStorage.setItem(\"readAuthorId\", author._id.toString());\n    this.router.navigate(['author']);\n  }\n}\n","<div class=\"container\">\n    <div>\n        <h2 style=\"margin-top: 1%; text-align: center;\">{{title}}\n            <p class=\"lead\"></p>\n        </h2>\n    </div>\n    <div class=\"row\">\n        <div class=\"col-md-12\">\n            <div class=\"panel\" *ngFor='let author of authors'>\n                <div class=\"panel-body\">\n\n                    <!--/stories-->\n                    <div class=\"row\">\n                        <br>\n                        <div class=\"col-md-2 col-sm-3 text-center\">\n                            <a class=\"story-title\"><img [src]='author.img' [title]='author.name' style=\"width:100px;height:100px\" class=\"img-circle\"></a>\n                        </div>\n                        <div class=\"col-md-10 col-sm-9\">\n                            <h3>{{author.aname}}</h3>\n                            <div class=\"row\">\n                                <div class=\"col-xs-9\">\n                                    <h4><span class=\"label label-default\">{{author.nationality}}</span></h4>\n                                    <h4>\n                                        <small style=\"font-family: courier,'new courier'; color: black; font-weight: bold;\" class=\"text-muted\">{{author.fambook}} • \n                                            <a (click)=\"ReadAuthor(author)\" class=\"text-muted\">Read More</a></small>\n                                    </h4>\n                                    <div class=\"row\">\n                                        <button class=\"btn btn-primary\" style=\"margin-left: 5px;\" *ngIf=\"_auth.rolesVerify()\" (click)=\"EditAuthor(author)\">Edit</button>\n                                        <button class=\"btn btn-danger\" style=\"margin-left: 5px; margin-right: 5px;\" *ngIf=\"_auth.rolesVerify()\"x (click)=\"DeleteAuthor(author._id)\">Delete</button>\n                                    </div>\n                                </div>\n                                <div class=\"col-xs-3\"></div>\n                            </div>\n                            <br><br>\n                        </div>\n                    </div>\n                    <hr>\n                    <!--/stories-->\n\n                </div>\n            </div>\n        </div>\n        <!--/col-12-->\n    </div>\n</div>","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BookService {\n  server_address:String ='/api';\n\n  constructor(private http:HttpClient) { }\n  getBook(id:any){\n    return this.http.get(`${this.server_address}/book/`+id);\n  }\n  getBooks(){\n    return this.http.get(`${this.server_address}/books`);\n  }\n  newBook(item){\n    return this.http.post(`${this.server_address}/addbook`,{\"book\":item})\n      .subscribe(data => {console.log(data)})\n  }\n  deleteBook(id:any){\n    return this.http.delete(`${this.server_address}/deletebook/`+id);\n  }\n  editBook(book:any)\n  {\n    return this.http.put(`${this.server_address}/editbook`, book)\n    .subscribe(data =>{console.log(data)})\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { BookModel } from './book.model';\nimport { BookService } from '../book.service';\nimport { AuthService} from '../auth.service';\n\n@Component({\n  selector: 'app-books',\n  templateUrl: './books.component.html',\n  styleUrls: ['./books.component.css']\n})\nexport class BooksComponent implements OnInit {\n  title:String = \"Books\";\n  books: BookModel[];\n  constructor(private bookService: BookService, private router:Router, private _auth: AuthService) { }\n\n  ngOnInit(): void {\n    this.bookService.getBooks().subscribe((data)=>{\n      this.books=JSON.parse(JSON.stringify(data));\n    })\n  }\n\n  DeleteBook(id: String){\n    this.bookService.deleteBook(id).subscribe(res =>{\n      this.bookService.getBooks().subscribe((data)=>{\n        this.books=JSON.parse(JSON.stringify(data));\n      })\n    })\n  }\n\n  EditBook(book:any){\n    localStorage.setItem(\"editBookId\", book._id.toString());\n    this.router.navigate(['editbook']);\n  }\n\n  ReadBook(book:any){\n    localStorage.setItem(\"readBookId\", book._id.toString());\n    this.router.navigate(['book']);\n  }\n}\n","<div class=\"container\">\n    <div>\n        <h2 style=\"margin-top: 1%; text-align: center;\">{{title}}\n            <p class=\"lead\"></p>\n        </h2>\n    </div>\n    <div class=\"row\">\n        <div class=\"col-md-12\">\n            <div class=\"panel\" *ngFor='let book of books'>\n                <div class=\"panel-body\">\n\n                    <!--/stories-->\n                    <div class=\"row\">\n                        <br>\n                        <div class=\"col-md-2 col-sm-3 text-center\">\n                            <a class=\"story-title\"><img [src]='book.img' [title]='book.btitle' style=\"width:100px;height:100px\" class=\"img-circle\"></a>\n                        </div>\n                        <div class=\"col-md-10 col-sm-9\">\n                            <h3>{{book.btitle}}</h3>\n                            <div class=\"row\">\n                                <div class=\"col-xs-9\">\n                                    <h4><span class=\"label label-default\">{{book.author}}</span></h4>\n                                    <h4>\n                                        <small style=\"font-family: courier,'new courier'; color: black; font-weight: bold;\" class=\"text-muted\">{{book.genre}} • \n                                            <a (click)=\"ReadBook(book)\" class=\"text-muted\">Read More</a></small>\n                                    </h4>\n                                    <br>\n                                    <div class=\"row\">\n                                        <button class=\"btn btn-primary\" style=\"margin-left: 5px;\" *ngIf=\"_auth.rolesVerify()\" (click)=\"EditBook(book)\">Edit</button>\n                                        <button class=\"btn btn-danger\" style=\"margin-left: 5px; margin-right: 5px;\"  *ngIf=\"_auth.rolesVerify()\" (click)=\"DeleteBook(book._id)\">Delete</button>\n                                    </div>\n                                </div>\n                                <div class=\"col-xs-3\"></div>\n                            </div>\n                            <br><br>\n                        </div>\n                    </div>\n                    <hr>\n                    <!--/stories-->\n\n                </div>\n            </div>\n        </div>\n        <!--/col-12-->\n    </div>\n</div>","export class BookModel{\n    constructor(\n        public btitle : string,\n        public author : string,\n        public genre : string,\n        public img : string,\n        public des: string){}\n}","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'LibraryApp';\n}\n","<app-header></app-header>\n<router-outlet></router-outlet>\n<app-footer></app-footer>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { BookModel } from '../books/book.model';\nimport { BookService } from '../book.service';\n\n@Component({\n  selector: 'app-book',\n  templateUrl: './book.component.html',\n  styleUrls: ['./book.component.css']\n})\nexport class BookComponent implements OnInit {\n  title:String = \"Book\";\n  book = new BookModel( null, null, null, null,null);\n  constructor(private bookService: BookService, private router:Router) { }\n\n  ngOnInit(): void {\n    let rbookId = localStorage.getItem(\"readBookId\");\n    this.bookService.getBook(rbookId).subscribe((data)=>{\n      this.book=JSON.parse(JSON.stringify(data));\n  })\n  }\n}\n","<div class=\"container\">\n    <div>\n        <h2 style=\"margin-top: 1%; text-align: center;\">{{title}}\n            <p class=\"lead\"></p>\n        </h2>\n    </div>\n    <hr style=\"width: 50%; margin-left: 25%;\"><br>\n    <div class=\"row\">\n        <div class=\"col-md-12\">\n            <div class=\"panel\">\n                <div class=\"panel-body\">\n\n                    <!--/stories-->\n                    <div class=\"row\" style=\"margin-left: 35%;\">\n                        <br>\n                        <div class=\"col-md-2 col-sm-3 text-center\" >\n                            <a class=\"story-title\"><img [src]='book.img' [title]='book.btitle' style=\"width:100px;height:100px\" class=\"img-circle\"></a>\n                        </div>\n                        <div class=\"col-md-10 col-sm-9\">\n                            <h3>{{book.btitle}}</h3>\n                            <div class=\"row\">\n                                <div class=\"col-xs-9\">\n                                    <h4><span class=\"label label-default\">{{book.author}}</span></h4>\n                                    <h4>\n                                        <small style=\"font-family: courier,'new courier'; color: black; font-weight: bold;\" class=\"text-muted\">{{book.genre}}</small>\n                                    </h4>\n                                </div>\n                                <div class=\"col-xs-3\"></div>\n                            </div>\n                            <br><br>\n                        </div>\n                    </div>\n                    <hr>\n                    <!--/stories-->\n                    <p>{{book.des}}</p>\n                </div>\n            </div>\n        </div>\n        <!--/col-12-->\n    </div>\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HeaderComponent } from './header/header.component';\nimport { HomeComponent } from './home/home.component';\nimport { BooksComponent } from './books/books.component';\nimport { AuthorsComponent } from './authors/authors.component';\nimport { AddBookComponent } from './add-book/add-book.component';\nimport { AuthService } from './auth.service';\nimport { TokenInterceptorService } from './token-interceptor.service';\nimport { EditBookComponent } from './edit-book/edit-book.component';\nimport { EditAuthorComponent } from './edit-author/edit-author.component';\nimport { AddAuthorComponent } from './add-author/add-author.component';\nimport { SignupComponent } from './signup/signup.component';\nimport { LoginComponent } from './login/login.component';\nimport { BookComponent } from './book/book.component';\nimport { AuthorComponent } from './author/author.component';\nimport { FooterComponent } from './footer/footer.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HeaderComponent,\n    HomeComponent,\n    BooksComponent,\n    AuthorsComponent,\n    AddBookComponent,\n    EditBookComponent,\n    EditAuthorComponent,\n    AddAuthorComponent,\n    SignupComponent,\n    LoginComponent,\n    BookComponent,\n    AuthorComponent,\n    FooterComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule\n  ],\n  providers: [AuthService,\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: TokenInterceptorService,\n      multi: true\n    }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","export class AuthorModel{\n    constructor(\n        public aname : string,\n        public nationality : string,\n        public fambook : string,\n        public img : string,\n        public des : string){}\n}","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  server_address:String ='/api';\n  loginUser(user:any){\n    return this.http.post<any>(`${this.server_address}/login`,user);\n  }\n\n  constructor(private http:HttpClient) { }\n  rolesVerify(){\n    let admin=sessionStorage.getItem('user');\n    if(admin==='admin@gmail.com'){\n      return true;\n    }\n  }\n\n  loggedIn(){\n    return !!localStorage.getItem('token');\n  }\n\n  getToken(){\n    return localStorage.getItem('token');\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../auth.service';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n  title:String='LibraryApp'\n  constructor(public _auth: AuthService, private _router: Router) { }\n\n  ngOnInit(): void {\n  }\n\n  logoutUser(){\n    localStorage.removeItem('token');\n    this._router.navigate(['/']);\n  }\n}\n","<div style=\"background-color: #1a508b;\">\n    <nav class=\"navbar\">\n        <h3 class=\"name\"><strong>{{title}}</strong></h3>\n        <ul class=\"nav-list\">\n            <li><a routerLink=\"/addbook\" *ngIf=\"_auth.loggedIn() && _auth.rolesVerify()\">Add Book</a></li>\n            <li><a routerLink=\"/addauthor\" *ngIf=\"_auth.loggedIn() && _auth.rolesVerify()\">Add Author</a></li>\n            <li><a routerLink=\"/books\" *ngIf=\"_auth.loggedIn()\">Books</a></li>\n            <li><a routerLink=\"/authors\" *ngIf=\"_auth.loggedIn()\">Authors</a></li>\n            <li><a (click)=\"logoutUser()\" *ngIf=\"_auth.loggedIn()\">Logout</a></li>\n            <li><a routerLink=\"/\" *ngIf=\"!_auth.loggedIn()\">Home</a></li>\n            <li><a routerLink=\"/signup\" *ngIf=\"!_auth.loggedIn()\">Sign Up</a></li>\n            <li><a routerLink=\"/login\" *ngIf=\"!_auth.loggedIn()\">Login</a></li>\n        </ul>\n    </nav>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"text-center p-3\" style=\"background-color: rgba(0, 0, 0, 0.2); margin: 0;\">\n    © 2021 Copyright:\n    LibraryApp\n  </div>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthorModel } from '../authors/author.model';\nimport { AuthorService } from '../author.service';\nimport { AuthService} from '../auth.service';\n\n@Component({\n  selector: 'app-add-author',\n  templateUrl: './add-author.component.html',\n  styleUrls: ['./add-author.component.css']\n})\nexport class AddAuthorComponent implements OnInit {\n  title:String = \"Add Author\";\n  constructor(private authorService: AuthorService, private router:Router, private _auth: AuthService) { }\n  authorItem = new AuthorModel( null, null, null, null,null);\n  ngOnInit(): void {\n  }\n\n  AddAuthor(){\n    this.authorService.newAuthor(this.authorItem);\n    alert(\"Success\");\n    this.router.navigate(['authors']);\n  }\n}\n","<div class=\"container\">\n    <div>\n      <h3 style=\"color: #1687a7; margin-top: 1%; margin-bottom: 2%; text-align: center;\">{{title}}\n        <p class=\"lead\"></p>\n      </h3>\n    </div>\n    <hr>\n    <form (ngSubmit)=\"AddAuthor()\">\n      <div class=\"container\">\n        <div class=\"row\">\n          <div class=\"col-lg-6\" style=\"margin-left: 25%;\">\n            <div class=\"panel\">\n              <div class=\"panel-body\" style=\"background-color: #d3e0ea; border-radius: 20px;\">\n                <div class='table-responsive'>\n                  <table class='table' style=\"margin-top: 15px;\">       \n                    <tbody> \n                      <tr>\n                        <td><label>Author Name</label></td>\n                        <td><input type=\"text\" style=\"width: 250px;\" name=\"aname\" [(ngModel)]=\"authorItem.aname\" required/></td>                  \n                      </tr>\n                      <tr>\n                        <td><label>Nationality</label></td>\n                        <td><input type=\"text\" style=\"width: 250px;\" name=\"nationality\" [(ngModel)]=\"authorItem.nationality\" required/></td>               \n                      </tr> \n                      <tr>\n                        <td><label>Famous Book</label></td>\n                        <td><input type=\"text\" style=\"width: 250px;\" name=\"fambook\" [(ngModel)]=\"authorItem.fambook\" required/></td>                  \n                      </tr> \n                      <tr>\n                        <td><label>Image Url</label></td>\n                        <td><input type=\"text\" style=\"width: 250px;\" name=\"img\" [(ngModel)]=\"authorItem.img\" required/></td>                  \n                      </tr> \n                      <tr>\n                        <td><label>Description</label></td>\n                        <td><input type=\"text\" style=\"width: 250px;\" name=\"des\" [(ngModel)]=\"authorItem.des\" required/></td>                  \n                      </tr>  \n                      <tr>\n                        <td></td>\n                        <td><button type=\"submit\" class=\"btn btn-info\">Submit</button></td>                  \n                      </tr>             \n                    </tbody>\n                  </table>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </form>\n  </div>","export class UserModel{\n    constructor(\n        public username: string,\n        public email: string,\n        public pwd: string){}\n}","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { UserModel } from './user.model';\nimport { UserService } from '../user.service';\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.css']\n})\nexport class SignupComponent implements OnInit {\n  title = \"Signup\";\n  constructor(private userService: UserService, private router: Router) { }\n\n  ngOnInit(): void {\n  }\n\n  user = new UserModel( null, null, null);\n\n  userVerify(){\n    this.userService.newUser(this.user);\n    alert(\"Success\");\n    this.router.navigate(['login']);\n  }\n}\n","<div class=\"container\">\n    <div>\n        <h3 style=\"color: #1687a7; margin-top: 1%; margin-bottom: 2%; text-align: center;\">{{title}}\n            <p class=\"lead\"></p>\n        </h3>\n    </div>\n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-lg-5\" style=\"margin-left: 30%;\">\n                <div class=\"panel\">\n                    <div class=\"panel-body\" style=\"background-color: #d3e0ea; border-radius: 20px;\">\n                        <form style=\"margin-left: 10%;\" #userlogin=\"ngForm\" (ngSubmit)=\"userVerify()\">\n                            <div class=\"form-group\">\n                                <label style=\"margin-top: 3%;\">Name</label>\n                                <input type=\"text\" class=\"form-control\" style=\"width: 350px;\" name=\"name\" [(ngModel)]=\"user.username\" required/>              \n                            </div> \n                            <div class=\"form-group\">\n                                <label>Email</label>\n                                <input type=\"email\" class=\"form-control\" style=\"width: 350px;\" name=\"email\" #email=\"ngModel\" [class.is-invalid]=\"email.invalid && email.touched\" [(ngModel)]=\"user.email\" pattern=\"^[a-z0-9.%+]+@[a-z0-9.-]+\\.[a-z]{2,4}\" required/>                  \n                                <small class=\"text-danger\" [class.d-none]=\"email.valid || email.touched\">Enter valid email</small>\n                            </div>\n                            <div class=\"form-group\">\n                                <label>Password</label>\n                                <input type=\"password\" class=\"form-control\" style=\"width: 350px;\" name=\"pwd\" [class.is-invalid]=\"pwd.invalid && pwd.touched\" #pwd=\"ngModel\" [(ngModel)]=\"user.pwd\" minlength=\"6\" required/>\n                                <small class=\"text-danger\" [class.d-none]=\"pwd.valid || pwd.touched\">Enter password of minimum length 6</small>                  \n                            </div> \n                            <button type=\"submit\" class=\"btn btn-info\" style=\"margin: 10% 0 5% 35%;\" [disabled]=\"userlogin.form.invalid\">Submit</button>                \n                        </form> \n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n    return true;\n  }\n  \n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AuthGuard } from './auth.guard';\nimport { HomeComponent } from './home/home.component';\nimport { BooksComponent } from './books/books.component';\nimport { AddBookComponent } from './add-book/add-book.component';\nimport { EditBookComponent } from './edit-book/edit-book.component';\nimport { AuthorsComponent } from './authors/authors.component';\nimport { AddAuthorComponent } from './add-author/add-author.component';\nimport { EditAuthorComponent } from './edit-author/edit-author.component';\nimport { LoginComponent } from './login/login.component';\nimport { SignupComponent } from './signup/signup.component';\nimport { BookComponent } from './book/book.component';\nimport { AuthorComponent } from './author/author.component';\n\nconst routes: Routes = [\n  {path : '', component : HomeComponent},\n  {path : 'books', canActivate:[AuthGuard], component : BooksComponent},\n  {path : 'addbook', canActivate:[AuthGuard], component : AddBookComponent},\n  {path : 'editbook', component : EditBookComponent},\n  {path : 'authors', canActivate:[AuthGuard], component : AuthorsComponent},\n  {path : 'addauthor', canActivate:[AuthGuard], component : AddAuthorComponent},\n  {path : 'editauthor', component : EditAuthorComponent},\n  {path : 'login', component : LoginComponent},\n  {path : 'signup', component : SignupComponent},\n  {path : 'book', canActivate:[AuthGuard], component : BookComponent},\n  {path : 'author', canActivate:[AuthGuard], component : AuthorComponent}];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../auth.service';\nimport { UserModel } from '../signup/user.model';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  title:String =\"Login\";\n  user = new UserModel( null, null, null);\n\n  constructor(private _auth: AuthService, private _router: Router) { }\n\n  ngOnInit(): void {\n  }\n\n  loginUser(){\n    localStorage.setItem(\"UserEmail\", this.user.email);\n    this._auth.loginUser(this.user)\n    \n    .subscribe(res=>{\n      console.log(\"user\",this.user)\n      localStorage.setItem('token', res.token);\n      sessionStorage.setItem(\"user\", this.user.email);\n      this._router.navigate(['books'])\n    });\n  }\n}\n","<div class=\"container\">\n    <div>\n        <h3 style=\"color: #1687a7; margin-top: 1%; margin-bottom: 2%; text-align: center;\">{{title}}\n            <p class=\"lead\"></p>\n        </h3>\n    </div>\n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-lg-5\" style=\"margin-left: 30%;\">\n                <div class=\"panel\">\n                    <div class=\"panel-body\" style=\"background-color: #d3e0ea; border-radius: 20px;\">\n                        <form style=\"margin-left: 10%;\" #userlogin=\"ngForm\" (ngSubmit)=\"loginUser()\">\n                            <div class=\"form-group\">\n                                <label style=\"margin-top: 3%;\">Email</label>\n                                <input type=\"email\" class=\"form-control\" style=\"width: 350px;\" name=\"email\" #email=\"ngModel\" [class.is-invalid]=\"email.invalid && email.touched\" [(ngModel)]=\"user.email\" pattern=\"^[a-z0-9.%+]+@[a-z0-9.-]+\\.[a-z]{2,4}\" required/>                  \n                                <small class=\"text-danger\" [class.d-none]=\"email.valid || email.touched\">Enter valid email</small>\n                            </div>\n                            <div class=\"form-group\">\n                                <label>Password</label>\n                                <input type=\"password\" class=\"form-control\" style=\"width: 350px;\" name=\"pwd\" [class.is-invalid]=\"pwd.invalid && pwd.touched\" #pwd=\"ngModel\" [(ngModel)]=\"user.pwd\" minlength=\"6\" required/>\n                                <small class=\"text-danger\" [class.d-none]=\"pwd.valid || pwd.touched\">Enter password of minimum length 6</small>                  \n                            </div> \n                            <button type=\"submit\" class=\"btn btn-info\" style=\"margin: 10% 0 5% 35%;\" [disabled]=\"userlogin.form.invalid\">Submit</button>                \n                        </form> \n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n  server_address:String ='/api';\n\n  constructor(private http:HttpClient) { }\n\n  newUser(item){\n    return this.http.post(`${this.server_address}/newuser`, {\"user\":item})\n      .subscribe(data => {console.log(data)})\n  }\n  getUser(email:any){\n    return this.http.get(`${this.server_address}/getuser/`+email);\n  }\n  checkUser(email:any){\n    return this.http.get(`${this.server_address}/checkuser/`+email);\n  }\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}